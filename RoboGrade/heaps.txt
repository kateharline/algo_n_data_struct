-------------------
CSE247 Robot tester starts testing heaps on 2016-10-18 18:33:24 -0500

========
Testing in checkoutlab3ontime/cse247-f16-students-kharline: heaps as of 2016-09-28 09:00
========
Buildfile: /Users/roncytron/Desktop/247/bitbucket/cse247-support/build.xml

copytest:
     [echo] would copy from /Users/roncytron/git/cse247-f16-students key kharline testfilesource test/TestMinHeap package heaps repo checkoutlab3ontime/cse247-f16-students-kharline
     [copy] Copying 1 file to /Users/roncytron/Desktop/247/bitbucket/cse247-support/checkoutlab3ontime/cse247-f16-students-kharline/labs/heaps/test

BUILD SUCCESSFUL
Total time: 0 seconds
Now in: /Users/roncytron/Desktop/247/bitbucket/cse247-support/checkoutlab3ontime/cse247-f16-students-kharline
Compiling the code
Buildfile: /Users/roncytron/Desktop/247/bitbucket/cse247-support/build.xml

compile:
     [echo] Compiling heaps/MinHeap
    [mkdir] Created dir: /Users/roncytron/Desktop/247/bitbucket/cse247-support/checkoutlab3ontime/cse247-f16-students-kharline/bin
    [javac] Compiling 1 source file to /Users/roncytron/Desktop/247/bitbucket/cse247-support/checkoutlab3ontime/cse247-f16-students-kharline/bin

BUILD SUCCESSFUL
Total time: 0 seconds
Buildfile: /Users/roncytron/Desktop/247/bitbucket/cse247-support/build.xml

compile:
     [echo] Compiling heaps/test/TestMinHeap
    [javac] Compiling 1 source file to /Users/roncytron/Desktop/247/bitbucket/cse247-support/checkoutlab3ontime/cse247-f16-students-kharline/bin

BUILD SUCCESSFUL
Total time: 0 seconds
Running test test.TestMinHeap
Buildfile: /Users/roncytron/Desktop/247/bitbucket/cse247-support/build.xml

test:
    [junit] Running heaps.test.TestMinHeap
    [junit] Testsuite: heaps.test.TestMinHeap
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                1                                                               2                               
    [junit]                4                               6                               10                              3               
    [junit]        12              7               9               15              11              13              20              5       
    [junit]    18      29      37      8       19      23      31      17      25      16      36      22      28      24      48      21  
    [junit]  34  33  49  30  41  42  35  14  38  39  46  27  43  40  47  45  32  26  44
    [junit] 
    [junit] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.709 sec
    [junit] Output:
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                1                                                               2                               
    [junit]                4                               6                               10                              3               
    [junit]        12              7               9               15              11              13              20              5       
    [junit]    18      29      37      8       19      23      31      17      25      16      36      22      28      24      48      21  
    [junit]  34  33  49  30  41  42  35  14  38  39  46  27  43  40  47  45  32  26  44
    [junit] 
    [junit] 
    [junit] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.709 sec
    [junit] ------------- Standard Output ---------------
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                1                                                               2                               
    [junit]                4                               6                               10                              3               
    [junit]        12              7               9               15              11              13              20              5       
    [junit]    18      29      37      8       19      23      31      17      25      16      36      22      28      24      48      21  
    [junit]  34  33  49  30  41  42  35  14  38  39  46  27  43  40  47  45  32  26  44
    [junit] 
    [junit] ------------- ---------------- ---------------
    [junit] 
    [junit] Testcase: testViaSorting took 0.012 sec
    [junit] Testcase: testEmptyHeap took 0.001 sec
    [junit] Testcase: testAndPrint took 0.025 sec
    [junit] Testcase: testExtractMin took 0.013 sec
    [junit] Testcase: testLocUpdatedHeapify took 0 sec
    [junit] Testcase: testInsert took 0 sec
    [junit] Testcase: testUsingHeapSort took 2.645 sec
    [junit] Testcase: testLocUpdatedDecrease took 0 sec

BUILD SUCCESSFUL
Total time: 3 seconds
================
Lab is counted as working
================

CSE247 Robot tester ends testing heaps on 2016-10-18 18:33:29 -0500
-------------------
